apply plugin: 'java-library'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'maven-publish'

version = '1.0-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8


// Location of the dependencies of the project
repositories {
    jcenter()
    // Needed for PDFBox
    maven { url "https://jitpack.io" }
}

dependencies {
    // Used at compilation time and for inclusion in the fat jar
    implementation 'org.apache.pdfbox:pdfbox:2.0.18'
    implementation 'org.apache.pdfbox:xmpbox:2.0.18'
    implementation 'org.apache.pdfbox:fontbox:2.0.18'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.apache.pdfbox:preflight:2.0.18'
}


sourceSets {
        main {
                java {
                        srcDirs= ["src/main/java"]
                }
        }
        test {
                java {
                        srcDirs= ["src/test/java"]
                }
                resources {
                        srcDirs= ["src/test/resources"]
                }
        }
}

mainClassName = 'com.fujitsu.edgewareroad.PDFRepair'


// the normal Jar without bundled dependencies
jar {
	manifest {
        attributes 'Implementation-Title': 'PDFRepair tool',  
        	'Implementation-Version': archiveVersion,
        	'Main-Class': mainClassName
    }
}

//create a single Jar with all dependencies
task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'PDFRepair tool',  
        	'Implementation-Version': archiveVersion,
        	'Main-Class': mainClassName
    }
    archiveClassifier = "all"
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    duplicatesStrategy = 'exclude' // May be duplicates of licence info, for example - ignore these in the "fat" jar file
    with jar
    dependsOn test
}

//create a Jar of the sources
task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
    archiveClassifier = "sources"
}

// Ensure we have our implementation dependencies listed in the POM
pom.withXml {
    def dependenciesNode = asNode().appendNode('dependencies')
    configurations.implementation.allDependencies.each {
        def dependencyNode = dependenciesNode.appendNode('dependency')
        dependencyNode.appendNode('groupId', it.group)
        dependencyNode.appendNode('artifactId', it.name)
        dependencyNode.appendNode('version', it.version)
    }
}

// Publishing the output to GitHub (standard JAR, fat JAR and sources plus POM file)
publishing {
	publications {
		maven(MavenPublication) {
			groupId 'com.fujitsu.edgewareroad'
			artifacts = [ jar, fatJar, sourcesJar ]
			pom {
				name = 'PDFRepair'
				description = 'Repairs legacy format PDF files'
			}
		}
	}
	repositories {
		maven {
			name = 'GitHubPackages'
			credentials {
				username = project.findProperty("mvnpub.user") ?: System.getenv("USERNAME")
				password = project.findProperty("mvnpub.key") ?: System.getenv("PASSWORD")
			}
			url = uri('https://maven.pkg.github.com/EdgewareRoad/PDFRepair')
		}
	}
}


